<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>top.zbeboy.project</groupId>
    <artifactId>ISY</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>ISY Parent Project</name>

    <!--  use a later Java version -->
    <properties>
        <java.version>1.8</java.version>
        <javax.inject.version>1</javax.inject.version>
        <jcaptcha.version>1.0</jcaptcha.version>
        <fastJson.version>1.2.8</fastJson.version>
        <jsoup.version>1.9.2</jsoup.version>
        <springfox-swagger2.version>2.6.0</springfox-swagger2.version>
        <org.springframework.webflow.version>2.0.5.RELEASE</org.springframework.webflow.version>

        <!-- webjars properties -->
        <webjars.bootstrap.version>3.3.7</webjars.bootstrap.version>
        <webjars.font-awesome.version>4.6.3</webjars.font-awesome.version>
        <webjars.metisMenu.version>2.5.2</webjars.metisMenu.version>
        <webjars.sb-admin.version>1.0.8-1</webjars.sb-admin.version>
        <webjars.bootstrap-treeview.version>1.2.0</webjars.bootstrap-treeview.version>
        <webjars.requirejs.version>2.2.0</webjars.requirejs.version>
        <webjars.requirejs-domready.version>2.0.1-2</webjars.requirejs-domready.version>
        <webjars.requirejs-text.version>2.0.15</webjars.requirejs-text.version>
        <webjars.requirejs-css.version>0.1.8</webjars.requirejs-css.version>
        <webjars.bootstrap-daterangepicker.version>2.1.24</webjars.bootstrap-daterangepicker.version>
        <webjars.bootstrap-select.version>1.11.2</webjars.bootstrap-select.version>
        <webjars.handlebars.version>4.0.5</webjars.handlebars.version>
        <webjars.messenger.version>1.5.0</webjars.messenger.version>
        <webjars.lato.version>0.3.0</webjars.lato.version>
        <webjars-locator.version>0.30</webjars-locator.version>
    </properties>

    <!-- Inherit defaults from Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.8.RELEASE</version>
    </parent>

    <!-- Add typical dependencies for a web application -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <!-- oauth2 -->
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.webflow</groupId>
            <artifactId>org.springframework.js</artifactId>
            <version>${org.springframework.webflow.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- jooq -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
        </dependency>

        <!-- Developer tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <!-- joda time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <!-- jcaptcha -->
        <dependency>
            <groupId>com.octo.captcha</groupId>
            <artifactId>jcaptcha</artifactId>
            <version>${jcaptcha.version}</version>
        </dependency>

        <!-- alibaba fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastJson.version}</version>
        </dependency>

        <!-- jsoup -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!-- JSR-107 API (try the JCache support) -->
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>

        <!-- inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>

        <!-- webjars bootstrap -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${webjars.bootstrap.version}</version>
        </dependency>

        <!-- font-awesome -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>font-awesome</artifactId>
            <version>${webjars.font-awesome.version}</version>
        </dependency>

        <!-- metisMenu -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>metisMenu</artifactId>
            <version>${webjars.metisMenu.version}</version>
        </dependency>

        <!-- sb-admin -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>startbootstrap-sb-admin-2</artifactId>
            <version>${webjars.sb-admin.version}</version>
        </dependency>

        <!-- bootstrap tree view -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap-treeview</artifactId>
            <version>${webjars.bootstrap-treeview.version}</version>
        </dependency>

        <!-- daterangepicker -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap-daterangepicker</artifactId>
            <version>${webjars.bootstrap-daterangepicker.version}</version>
        </dependency>

        <!-- select -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap-select</artifactId>
            <version>${webjars.bootstrap-select.version}</version>
        </dependency>

        <!-- lato -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>lato</artifactId>
            <version>${webjars.lato.version}</version>
        </dependency>

        <!-- messenger -->
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>messenger</artifactId>
            <version>${webjars.messenger.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.webjars.bower</groupId>
                    <artifactId>jquery</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- webjars requirejs -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>requirejs</artifactId>
            <version>${webjars.requirejs.version}</version>
        </dependency>

        <!-- requirejs domready -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>requirejs-domready</artifactId>
            <version>${webjars.requirejs-domready.version}</version>
        </dependency>

        <!-- requirejs text -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>requirejs-text</artifactId>
            <version>${webjars.requirejs-text.version}</version>
        </dependency>

        <!-- requirejs css -->
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>require-css</artifactId>
            <version>${webjars.requirejs-css.version}</version>
        </dependency>

        <!-- webjars handlebars -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>handlebars</artifactId>
            <version>${webjars.handlebars.version}</version>
        </dependency>

        <!-- use it to automatically resolve the version of any WebJar assets for you -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
            <version>${webjars-locator.version}</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>spring-milestone</id>
            <url>https://repo.spring.io/libs-release</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestone</id>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0-alpha-2</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>src/main/resources/application-dev.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <!-- The jOOQ code generation plugin is also executed in the generate-sources phase, prior to compilation -->
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!-- This is a minimal working configuration. See the manual's section about the code generator for more details -->
                        <configuration>
                            <jdbc>
                                <driver>${spring.datasource.driver-class-name}</driver>
                                <url>${spring.datasource.url}</url>
                                <user>${spring.datasource.username}</user>
                                <password>${spring.datasource.password}</password>
                            </jdbc>
                            <generator>
                                <generate>
                                    <daos>true</daos>
                                    <validationAnnotations>true</validationAnnotations>
                                </generate>
                                <database>
                                    <name>org.jooq.util.mysql.MySQLDatabase</name>
                                    <includes>.*</includes>
                                    <inputSchema>${spring.datasource.schema}</inputSchema>
                                    <!-- First, register your custom types here -->
                                    <customTypes>
                                        <customType>
                                            <!-- Specify the name of your custom type. Avoid using names from org.jooq.impl.SQLDataType -->
                                            <name>GregorianCalendar</name>
                                            <!-- Specify the Java type of your custom type. This corresponds to the Converter's <U> type. -->
                                            <type>java.util.GregorianCalendar</type>
                                            <!-- Associate that custom type with your converter. -->
                                            <converter>top.zbeboy.isy.converter.CalendarConverter</converter>
                                        </customType>
                                        <customType>
                                            <!-- Specify the name of your custom type. Avoid using names from org.jooq.impl.SQLDataType -->
                                            <name>Boolean</name>
                                            <!-- Specify the Java type of your custom type. This corresponds to the Converter's <U> type. -->
                                            <type>java.lang.Boolean</type>
                                            <!-- Associate that custom type with your converter. -->
                                            <converter>top.zbeboy.isy.converter.BooleanConverter</converter>
                                        </customType>
                                        <customType>
                                            <!-- Specify the name of your custom type. Avoid using names from org.jooq.impl.SQLDataType -->
                                            <name>Date</name>
                                            <!-- Specify the Java type of your custom type. This corresponds to the Converter's <U> type. -->
                                            <type>java.util.Date</type>
                                            <!-- Associate that custom type with your converter. -->
                                            <converter>top.zbeboy.isy.converter.DateConverter</converter>
                                        </customType>
                                    </customTypes>
                                    <!-- Then, associate custom types with database columns -->
                                    <forcedTypes>
                                        <forcedType>
                                            <!-- Specify the name of your custom type -->
                                            <name>Date</name>
                                            <!-- Add a Java regular expression matching fully-qualified columns. Use the pipe to separate several expressions.
                                            If provided, both "expressions" and "types" must match. -->
                                            <expression>.*\.DATE_OF_.*</expression>
                                            <!-- Add a Java regular expression matching data types to be forced to
                                            have this type.
                                            Data types may be reported by your database as:
                                            - NUMBER regexp suggestion: NUMBER
                                            - NUMBER(5) regexp suggestion: NUMBER\(5\)
                                            - NUMBER(5, 2) regexp suggestion: NUMBER\(5,\s*2\)
                                            - any other form
                                            It is thus recommended to use defensive regexes for types.
                                            If provided, both "expressions" and "types" must match. -->
                                            <types>.*</types>
                                        </forcedType>
                                    </forcedTypes>
                                </database>
                                <target>
                                    <packageName>top.zbeboy.isy.domain</packageName>
                                    <directory>${basedir}/src/main/java</directory>
                                </target>
                            </generator>
                        </configuration>
                    </plugin>

                    <!-- support git info -->
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>prod</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <executable>true</executable>
                            <arguments>
                                <argument>--spring.profiles.active=prod</argument>
                            </arguments>
                        </configuration>
                    </plugin>

                    <!-- YUI Compressor Maven压缩插件 -->
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>yuicompressor-maven-plugin</artifactId>
                        <version>1.5.1</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>jslint</goal>
                                    <goal>compress</goal>
                                </goals>
                            </execution>
                        </executions>
                       <configuration>
                            <encoding>UTF-8</encoding>
                            <force>true</force>
                            <nosuffix>true</nosuffix>
                            <excludes>
                                <exclude>**/*.min.js</exclude>
                                <exclude>**/*.min.css</exclude>
                            </excludes>
                        </configuration>
                    </plugin>

                    <!-- support git info -->
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>