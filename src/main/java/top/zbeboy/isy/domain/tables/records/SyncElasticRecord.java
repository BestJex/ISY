/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.isy.domain.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.isy.domain.tables.SyncElastic;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SyncElasticRecord extends UpdatableRecordImpl<SyncElasticRecord> implements Record5<Integer, String, Timestamp, String, String> {

    private static final long serialVersionUID = 1499917930;

    /**
     * Setter for <code>isy.sync_elastic.sync_elastic</code>.
     */
    public void setSyncElastic(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>isy.sync_elastic.sync_elastic</code>.
     */
    @NotNull
    public Integer getSyncElastic() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>isy.sync_elastic.application_name</code>.
     */
    public void setApplicationName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>isy.sync_elastic.application_name</code>.
     */
    @NotNull
    @Size(max = 30)
    public String getApplicationName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>isy.sync_elastic.sync_time</code>.
     */
    public void setSyncTime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>isy.sync_elastic.sync_time</code>.
     */
    @NotNull
    public Timestamp getSyncTime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>isy.sync_elastic.sync_url</code>.
     */
    public void setSyncUrl(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>isy.sync_elastic.sync_url</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getSyncUrl() {
        return (String) get(3);
    }

    /**
     * Setter for <code>isy.sync_elastic.username</code>.
     */
    public void setUsername(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>isy.sync_elastic.username</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getUsername() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Timestamp, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Timestamp, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SyncElastic.SYNC_ELASTIC.SYNC_ELASTIC_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SyncElastic.SYNC_ELASTIC.APPLICATION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return SyncElastic.SYNC_ELASTIC.SYNC_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SyncElastic.SYNC_ELASTIC.SYNC_URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SyncElastic.SYNC_ELASTIC.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSyncElastic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getApplicationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getSyncTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSyncUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SyncElasticRecord value1(Integer value) {
        setSyncElastic(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SyncElasticRecord value2(String value) {
        setApplicationName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SyncElasticRecord value3(Timestamp value) {
        setSyncTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SyncElasticRecord value4(String value) {
        setSyncUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SyncElasticRecord value5(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SyncElasticRecord values(Integer value1, String value2, Timestamp value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SyncElasticRecord
     */
    public SyncElasticRecord() {
        super(SyncElastic.SYNC_ELASTIC);
    }

    /**
     * Create a detached, initialised SyncElasticRecord
     */
    public SyncElasticRecord(Integer syncElastic, String applicationName, Timestamp syncTime, String syncUrl, String username) {
        super(SyncElastic.SYNC_ELASTIC);

        set(0, syncElastic);
        set(1, applicationName);
        set(2, syncTime);
        set(3, syncUrl);
        set(4, username);
    }
}
