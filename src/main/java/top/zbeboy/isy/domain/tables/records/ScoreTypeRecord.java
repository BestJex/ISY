/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.isy.domain.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.isy.domain.tables.ScoreType;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScoreTypeRecord extends UpdatableRecordImpl<ScoreTypeRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -1017860951;

    /**
     * Setter for <code>isy.score_type.score_type_id</code>.
     */
    public void setScoreTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>isy.score_type.score_type_id</code>.
     */
    @NotNull
    public Integer getScoreTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>isy.score_type.score_type_name</code>.
     */
    public void setScoreTypeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>isy.score_type.score_type_name</code>.
     */
    @NotNull
    @Size(max = 20)
    public String getScoreTypeName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ScoreType.SCORE_TYPE.SCORE_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ScoreType.SCORE_TYPE.SCORE_TYPE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getScoreTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getScoreTypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreTypeRecord value1(Integer value) {
        setScoreTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreTypeRecord value2(String value) {
        setScoreTypeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreTypeRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScoreTypeRecord
     */
    public ScoreTypeRecord() {
        super(ScoreType.SCORE_TYPE);
    }

    /**
     * Create a detached, initialised ScoreTypeRecord
     */
    public ScoreTypeRecord(Integer scoreTypeId, String scoreTypeName) {
        super(ScoreType.SCORE_TYPE);

        set(0, scoreTypeId);
        set(1, scoreTypeName);
    }
}
