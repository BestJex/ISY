/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.isy.domain.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import top.zbeboy.isy.domain.Isy;
import top.zbeboy.isy.domain.Keys;
import top.zbeboy.isy.domain.tables.records.PoliticalLandscapeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoliticalLandscape extends TableImpl<PoliticalLandscapeRecord> {

    private static final long serialVersionUID = -1605468110;

    /**
     * The reference instance of <code>isy.political_landscape</code>
     */
    public static final PoliticalLandscape POLITICAL_LANDSCAPE = new PoliticalLandscape();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PoliticalLandscapeRecord> getRecordType() {
        return PoliticalLandscapeRecord.class;
    }

    /**
     * The column <code>isy.political_landscape.political_landscape_id</code>.
     */
    public final TableField<PoliticalLandscapeRecord, Integer> POLITICAL_LANDSCAPE_ID = createField("political_landscape_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>isy.political_landscape.political_landscape_name</code>.
     */
    public final TableField<PoliticalLandscapeRecord, String> POLITICAL_LANDSCAPE_NAME = createField("political_landscape_name", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

    /**
     * Create a <code>isy.political_landscape</code> table reference
     */
    public PoliticalLandscape() {
        this("political_landscape", null);
    }

    /**
     * Create an aliased <code>isy.political_landscape</code> table reference
     */
    public PoliticalLandscape(String alias) {
        this(alias, POLITICAL_LANDSCAPE);
    }

    private PoliticalLandscape(String alias, Table<PoliticalLandscapeRecord> aliased) {
        this(alias, aliased, null);
    }

    private PoliticalLandscape(String alias, Table<PoliticalLandscapeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Isy.ISY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PoliticalLandscapeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POLITICAL_LANDSCAPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PoliticalLandscapeRecord> getPrimaryKey() {
        return Keys.KEY_POLITICAL_LANDSCAPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PoliticalLandscapeRecord>> getKeys() {
        return Arrays.<UniqueKey<PoliticalLandscapeRecord>>asList(Keys.KEY_POLITICAL_LANDSCAPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PoliticalLandscape as(String alias) {
        return new PoliticalLandscape(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PoliticalLandscape rename(String name) {
        return new PoliticalLandscape(name, null);
    }
}
